- include_vars: dashboard-vars.yml
  tags: always

# Please do not delete the debug lines that are commented out! 
# - debug:
#     msg: >-
#       https://raw.githubusercontent.com/kubernetes/dashboard/{{ version_kube_dashboard }}/aio/deploy/recommended.yaml
# 
# - debug:
#     msg: '{{ item | from_yaml }}'
#   with_items: >-
#       {{ lookup('url', 'https://raw.githubusercontent.com/kubernetes/dashboard/{{ version_kube_dashboard }}/aio/deploy/recommended.yaml',
#       split_lines=False)
#       .split('---') }}
#   when: false

#Tip for deploying all the necessary objects for the dashboard directly from the deploy file on the Github repository of the dashboard
- name: Dashboard objects from GitHub
  kubernetes.core.k8s:
    state: present
    resource_definition: '{{ item | from_yaml }}'
  with_items: >-
      {{ lookup('url', 'https://raw.githubusercontent.com/kubernetes/dashboard/{{ version_kube_dashboard }}/aio/deploy/recommended.yaml',
      split_lines=False)
      .split('---') }}

# 
# 
# 
# 
# - meta: end_play
# 
# ce n'est pas encore test√© ici !
# 
# 
# Configuration de l'UI du dashboard de k3s
# Il suffit de copier toutes ces lignes dans la console du master:
# 
# cat <<EOF | kubectl apply -f -
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: admin-user
#   namespace: kubernetes-dashboard
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: admin-user
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: cluster-admin
# subjects:
# - kind: ServiceAccount
#   name: admin-user
#   namespace: kubernetes-dashboard
# ---
# EOF
# 
# 
# 
# 
# 
# - name: create the multi-juicer-loadbalancer k8s service object
#   community.kubernetes.k8s:
#     state: present
#     definition:
#       apiVersion: v1
#       kind: Service
#       metadata:
#         name: multi-juicer-loadbalancer
#         namespace: default
#       spec:
#         selector:
#           app.kubernetes.io/instance: multi-juicer
#           app.kubernetes.io/name: multi-juicer
#         ports:
#         - name: http
#           protocol: TCP
#           port: 80
#           targetPort: 3000
# 
# 
# 
# 
# 
# 
# 
# 
